{"version":3,"sources":["game/data/JaJankenTechnique.tsx","web/views/HomeView.tsx","blockchain/Web3Utils.tsx","web/views/Navbar.tsx","blockchain/ContractLoader.tsx","utils/NumberUtils.tsx","blockchain/Lina.tsx","game/JaJanken.tsx","resources/techniques/guu.png","web/views/coliseum/ColiseumMatch.tsx","resources/techniques/chi.png","resources/techniques/paa.png","resources/techniques/hidden.png","resources/images.js","web/views/coliseum/JaJankenColiseum.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["JaJankenTechnique","HomeView","props","componentDidMount","a","setState","loading","startColiseum","history","push","state","this","id","className","onClick","Component","withRouter","Web3Utils","window","ethereum","request","method","web3","Web3","currentProvider","alert","eth","net","getId","getAccounts","defaultAccount","account","value","utils","fromAscii","Navbar","href","target","rel","icon","ContractLoader","getNetwork","networkId","console","log","JaJankenColiseumData","JaJankenColiseum","networks","Contract","abi","address","NumberUtils","parseInt","toString","Lina","data","call","from","send","getDefaultAccount","JaJanken","contract","methods","entranceTicketFee","getGameEntranceTicketFee","then","entranceTicket","joinGame","joinMatch","_","alivePlayers","totalPaa","totalChi","totalGuu","getProfile","profile","queued","inQueue","inMatch","nullAddress","nen","guu","paa","chi","playerAddress","getPlayer","player","techniques","matchId","matches","match","p2","p1Hidden","p2Hidden","p1Revealed","p2Revealed","playTime","revealTime","Player","key","localStorage","getItem","initKey","uuidv4","substring","setItem","None","technique","encodeAction","encode","getKey","encodedTechnique","playMatch","revealMatch","MatchState","TechniqueImg","hidden","fromTechnique","Chi","Guu","Paa","GameState","ColiseumMatch","handleMatchEnd","event","returnValues","matchState","Result","matchResult","isVictory","winner","opponent","p1","opponentPlayed","p2Played","p1Played","handleMatchPlayed","Reveal","backToLobby","backToPickPlay","savePlay","currentPick","PickPlay","pickGuu","Commit","pickChi","pickPaa","commitPlay","jajankenColiseum","CommitWait","revealPlay","RevealWait","nenBalance","availableGuu","availablePaa","availableChi","getPlayed","currentMatch","Loading","loadColiseumData","subscribeToGameEvents","coliseum","getMyProfile","getMatch","meHidden","opHidden","meRevealed","opRevealed","MatchEnded","nullBytes","getOpponent","events","MatchEnd","on","MatchPlayed","src","width","alt","opponentPick","handleStartMatch","gameState","InMatch","handlePlayerJoinGame","p","Lobby","getGameStats","game","joinColiseum","joinMatchQueue","LookingMatch","catch","error","instantiateColiseum","setDefaultAccount","NeedPay","opponentId","PlayerJoin","MatchStart","library","add","faGithub","faLinkedinIn","App","loadMetamask","loadBlockchainData","accounts","role","style","maxWidth","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86300a3b.chunk.js","sourcesContent":["export enum JaJankenTechnique {\n    None,\n    Guu,\n    Paa,\n    Chi\n}","import React, {Component} from \"react\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\n\n\ninterface HomeViewProperties extends RouteComponentProps {\n}\ninterface HomeViewState {\n    loading: Boolean\n}\n\nclass HomeView extends Component<HomeViewProperties, HomeViewState> {\n\n    constructor(props: HomeViewProperties) {\n        super(props)\n        this.state = {\n            loading: true\n        }\n    }\n\n    componentDidMount = async () => {\n        this.setState({loading: false})\n    }\n\n    startColiseum = async () => {\n        this.props.history.push('/coliseum')\n    }\n\n\n    render() {\n        if(this.state.loading) {\n            return <p id=\"loader\" className=\"text-center\">Loading...</p>\n        } else {\n            return <div>\n                <div className=\"row\">\n                Hello World !\n                </div>\n\n                <div className=\"row\">\n                    <button className={\"btn-light\"} onClick={this.startColiseum}>Launch Coliseum</button>\n                </div>\n            </div>\n        }\n    }\n}\n\nexport default withRouter(HomeView);","import Web3 from 'web3'\n\ndeclare let window: any;\n\nexport default class Web3Utils {\n\n    static async loadMetamask() {\n        if (window.ethereum) {\n            await window.ethereum.request({ method: 'eth_requestAccounts' })\n            window.web3 = new Web3(window.ethereum)\n        }\n        else if (window.web3) {\n            window.web3 = new Web3(window.web3.currentProvider)\n        }\n        else {\n            window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n        }\n    }\n\n    static async getNetwork(): Promise<number> {\n        return window.web3.eth.net.getId()\n    }\n\n    static async getAccounts(): Promise<string[]> {\n        return window.web3.eth.getAccounts()//window.ethereum.request({ method: 'eth_requestAccounts' })\n    }\n\n    static getDefaultAccount(): string | null {\n        return window.web3.eth.defaultAccount\n    }\n\n    static setDefaultAccount(account: any) {\n        window.web3.eth.defaultAccount = account\n    }\n\n    static encode(value: string): string {\n       return window.web3.utils.fromAscii(value)\n    }\n\n    static nullAddress() {\n        return '0x0000000000000000000000000000000000000000';\n    }\n\n    static nullBytes() {\n        return '0x0000000000000000000000000000000000000000000000000000000000000000';\n    }\n}","import React, {Component} from 'react';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\ntype NavbarProperties = {\n    account: String,\n}\ntype NavbarState = {\n    account: String,\n    loading: Boolean\n}\n\nexport default class Navbar extends Component<NavbarProperties, NavbarState> {\n    constructor(props: NavbarProperties) {\n        super(props)\n        this.state = {\n            account: props.account,\n            loading: true\n        }\n    }\n\n    async componentDidMount() {\n        this.setState({loading: false})\n    }\n\n    render() {\n        return <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n                <a\n                    className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n                    href=\"https://github.com/Draym/jajanken-evm\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <span><FontAwesomeIcon icon={['fab', \"github\"]}/> Game Contracts</span>\n                </a>\n\n                <ul className=\"navbar-nav px-3\">\n                    <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n                        <small className=\"text-secondary\">\n                            <small id=\"account\">{this.props.account}</small>\n                        </small>\n                    </li>\n                </ul>\n            </nav>\n    }\n}","import JaJankenColiseum from './contracts/JaJankenColiseum.json'\nimport Web3Utils from \"./Web3Utils\";\n\ndeclare let window: any;\n\nexport default class ContractLoader {\n    static async instantiateColiseum() {\n        const networkId = await Web3Utils.getNetwork()\n        console.log(\"network\", networkId)\n        // @ts-ignore\n        const JaJankenColiseumData = JaJankenColiseum.networks[networkId]\n        console.log(\"JaJankenColiseumData\", JaJankenColiseumData)\n        if (JaJankenColiseumData) {\n            return new window.web3.eth.Contract(JaJankenColiseum.abi, JaJankenColiseumData.address)\n        } else {\n            window.alert('JaJankenColiseum contract not deployed to detected network.')\n        }\n\n    }\n}","export default class NumberUtils {\n    static from(value: any): number {\n        return parseInt(value.toString())\n    }\n}","import Web3Utils from \"./Web3Utils\";\n\nexport default class Lina {\n\n    static async call(method: any, data: object = {}) {\n        return method.call({from: Lina.account(), ...data})\n    }\n\n    static async send(method: any, data: object = {}) {\n        return method.send({from: Lina.account(), ...data})\n    }\n\n    static account() {\n        return Web3Utils.getDefaultAccount()\n    }\n}","import NumberUtils from \"../utils/NumberUtils\";\nimport {PlayerStats} from \"./data/PlayerStats\";\nimport {GameStats} from \"./data/GameStats\";\nimport {OpponentStats} from \"./data/OpponentStats\";\nimport Lina from \"../blockchain/Lina\";\nimport Web3Utils from \"../blockchain/Web3Utils\";\nimport {JaJankenTechnique} from \"./data/JaJankenTechnique\";\nimport {v4 as uuidv4} from \"uuid\";\nimport {MatchStats} from \"./data/MatchStats\";\n\nexport default class JaJanken {\n\n    static async getGameEntranceTicketFee(contract: any): Promise<number> {\n        return await Lina.call(contract.methods.entranceTicketFee())\n    }\n\n    static async joinColiseum(contract: any) {\n        this.getGameEntranceTicketFee(contract).then(entranceTicket => {\n            Lina.send(contract.methods.joinGame(), {value: entranceTicket})\n        })\n    }\n\n    static async joinMatchQueue(contract: any) {\n        Lina.send(contract.methods.joinMatch()).then(_ => {\n        })\n    }\n\n    static async getGameStats(contract: any): Promise<GameStats> {\n        const alivePlayers = await Lina.call(contract.methods.alivePlayers())\n        const totalPaa = await Lina.call(contract.methods.totalPaa())\n        const totalChi = await Lina.call(contract.methods.totalChi())\n        const totalGuu = await Lina.call(contract.methods.totalGuu())\n        return {\n            alivePlayers: NumberUtils.from(alivePlayers),\n            totalPaa: NumberUtils.from(totalPaa),\n            totalChi: NumberUtils.from(totalChi),\n            totalGuu: NumberUtils.from(totalGuu)\n        }\n    }\n\n    static async getMyProfile(contract: any): Promise<PlayerStats | null> {\n        const profile = await Lina.call(contract.methods.getProfile())\n        const queued = await Lina.call(contract.methods.queued())\n        if (profile) {\n            return {\n                inQueue: queued === Web3Utils.getDefaultAccount(),\n                inMatch: profile.inMatch === Web3Utils.nullAddress() ? null : profile.inMatch,\n                nen: NumberUtils.from(profile.nen),\n                guu: NumberUtils.from(profile.guu),\n                paa: NumberUtils.from(profile.paa),\n                chi: NumberUtils.from(profile.chi)\n            }\n        } else return null\n    }\n\n    static async getOpponent(contract: any, playerAddress: string | null): Promise<OpponentStats | null> {\n        if (playerAddress == null)\n            return null\n        const player = await Lina.call(contract.methods.getPlayer(playerAddress))\n        if (player) {\n            return {\n                nen: NumberUtils.from(player.nen),\n                techniques: NumberUtils.from(player.techniques),\n            }\n        } else return null\n    }\n\n    static async getMatch(contract: any, matchId: string): Promise<MatchStats | null> {\n        const match = await Lina.call(contract.methods.matches(matchId))\n        if (match) {\n            return {\n                p2: match.p2,\n                p1Hidden: match.p1Hidden,\n                p2Hidden: match.p2Hidden,\n                p1Revealed: parseInt(match.p1Revealed),\n                p2Revealed: parseInt(match.p2Revealed),\n                playTime: parseInt(match.playTime),\n                revealTime: parseInt(match.revealTime)\n            }\n        } else return null\n    }\n\n    static Player = class {\n\n        static getKey(): string {\n            let key = localStorage.getItem('jajanken-key$' + Lina.account())\n            if (key == null) {\n                key = this.initKey()\n            }\n            return key\n        }\n\n        static initKey(): string {\n            const key = uuidv4().substring(0, 20)\n            localStorage.setItem('jajanken-key$' + Lina.account(), key)\n            return key\n        }\n\n        static getPlayed(): JaJankenTechnique {\n            let key = localStorage.getItem('jajanken-played$' + Lina.account())\n            if (key == null || key === '') {\n                return JaJankenTechnique.None\n            } else {\n                return parseInt(key)\n            }\n        }\n\n        static savePlay(technique: JaJankenTechnique) {\n            localStorage.setItem('jajanken-played$' + Lina.account(), technique.toString())\n        }\n\n        static async commitPlay(contract: any, matchId: string, technique: JaJankenTechnique) {\n            Lina.call(contract.methods.encodeAction(Lina.account(), technique, Web3Utils.encode(this.getKey()))).then(encodedTechnique => {\n                Lina.send(contract.methods.playMatch(encodedTechnique, matchId)).then(_ => {\n                })\n            })\n        }\n\n        static async revealPlay(contract: any, matchId: string, technique: JaJankenTechnique) {\n            Lina.send(contract.methods.revealMatch(technique, Web3Utils.encode(this.getKey()), matchId)).then(_ => {\n            })\n        }\n    }\n}\n","export default __webpack_public_path__ + \"static/media/guu.b4d646ff.png\";","import React, {Component} from \"react\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\nimport JaJanken from \"../../../game/JaJanken\";\nimport {TechniqueImg} from \"../../../resources/images\";\nimport {CurrentMatch} from \"../../../game/data/CurrentMatch\";\nimport {JaJankenTechnique} from \"../../../game/data/JaJankenTechnique\";\nimport Lina from \"../../../blockchain/Lina\";\nimport Web3Utils from \"../../../blockchain/Web3Utils\";\n\n\nenum MatchState {\n    Loading,\n    PickPlay,\n    Commit,\n    CommitWait,\n    Reveal,\n    RevealWait,\n    Result,\n    MatchEnded\n}\n\n\ninterface ColiseumMatchProperties extends RouteComponentProps {\n    jajankenColiseum: any,\n    currentMatch: CurrentMatch,\n    backToLobby: () => void\n}\n\ninterface ColiseumMatchState {\n    nenBalance: number,\n    availableGuu: number,\n    availablePaa: number,\n    availableChi: number,\n    currentPick: JaJankenTechnique,\n    match: CurrentMatch,\n    matchState: MatchState,\n    matchResult: MatchResult | null\n}\n\ninterface MatchResult {\n    opponent: string,\n    opponentPlayed: JaJankenTechnique,\n    winner: string,\n    isVictory: boolean\n}\n\nclass ColiseumMatch extends Component<ColiseumMatchProperties, ColiseumMatchState> {\n\n    constructor(props: ColiseumMatchProperties) {\n        super(props)\n\n        this.state = {\n            nenBalance: 0,\n            availableGuu: 0,\n            availablePaa: 0,\n            availableChi: 0,\n            currentPick: JaJanken.Player.getPlayed(),\n            match: props.currentMatch,\n            matchState: MatchState.Loading,\n            matchResult: null\n        }\n    }\n\n    async componentDidMount() {\n        await this.loadColiseumData()\n        await this.subscribeToGameEvents()\n    }\n\n    async loadColiseumData() {\n        let coliseum = await this.props.jajankenColiseum\n        JaJanken.getMyProfile(coliseum).then(profile => {\n                if (profile) {\n                    if (profile.nen === 0) {\n                        this.setState({matchState: MatchState.Result})\n                        window.alert(`Account ${Lina.account()} has previously lost all his nen, please re-join the game first!`)\n                    } else if (profile.chi === 0 && profile.paa === 0 && profile.guu === 0) {\n                        this.setState({matchState: MatchState.Result})\n                        window.alert(`Account ${Lina.account()} has no card to play, you can withdraw you gain or re-join the game!`)\n                    } else {\n                        this.setState({\n                            nenBalance: profile.nen,\n                            availableGuu: profile.guu,\n                            availablePaa: profile.paa,\n                            availableChi: profile.chi,\n                            matchState: MatchState.PickPlay\n                        })\n                    }\n                } else {\n                    this.setState({matchState: MatchState.Result})\n                    window.alert(`Account ${Lina.account()} do not exist yet, please join the game first!`)\n                }\n\n                JaJanken.getMatch(coliseum, this.state.match.matchId).then(match => {\n                    console.log(\"{match}[init] match: \", match)\n                    if (match != null) {\n                        let meHidden;\n                        let opHidden;\n                        let meRevealed;\n                        let opRevealed;\n\n\n                        if (match.p2 === Web3Utils.nullAddress()) {\n                            this.setState({matchState: MatchState.MatchEnded})\n                        } else {\n                            if (Lina.account() === this.state.match.matchId) {\n                                meHidden = match.p1Hidden\n                                opHidden = match.p2Hidden\n                                meRevealed = match.p1Revealed\n                                opRevealed = match.p2Revealed\n                            } else {\n                                meHidden = match.p2Hidden\n                                opHidden = match.p1Hidden\n                                meRevealed = match.p2Revealed\n                                opRevealed = match.p1Revealed\n                            }\n\n                            if (meRevealed !== JaJankenTechnique.None) {\n                                if (opRevealed !== JaJankenTechnique.None) {\n                                    this.setState({matchState: MatchState.Result})\n                                } else {\n                                    this.setState({matchState: MatchState.RevealWait})\n                                }\n                            } else {\n                                if (opRevealed !== JaJankenTechnique.None) {\n                                    this.setState({matchState: MatchState.Reveal})\n                                } else {\n                                    if (meHidden !== Web3Utils.nullBytes()) {\n                                        if (opHidden !== Web3Utils.nullBytes()) {\n                                            this.setState({matchState: MatchState.Reveal})\n                                        } else {\n                                            this.setState({matchState: MatchState.CommitWait})\n                                        }\n                                    } else {\n                                        this.setState({\n                                            currentPick: JaJanken.Player.getPlayed(),\n                                            matchState: JaJanken.Player.getPlayed() !== JaJankenTechnique.None ? MatchState.Commit : MatchState.PickPlay\n                                        })\n                                    }\n                                }\n                            }\n                        }\n                    }\n                })\n            }\n        )\n\n        JaJanken.getOpponent(coliseum, this.state.match.p1 === Lina.account() ? this.state.match.p2 : this.state.match.p1).then(opponent => {\n            console.log(\"[test] opponent: \", opponent)\n        })\n    }\n\n    async subscribeToGameEvents() {\n        await this.props.jajankenColiseum\n\n        this.props.jajankenColiseum.events.MatchEnd({p1: Lina.account()})\n            .on('data', this.handleMatchEnd)\n        this.props.jajankenColiseum.events.MatchEnd({p2: Lina.account()})\n            .on('data', this.handleMatchEnd)\n        this.props.jajankenColiseum.events.MatchPlayed({matchId: this.state.match.matchId})\n            .on('data', this.handleMatchPlayed)\n    }\n\n    handleMatchEnd = (event: any) => {\n        const data = event.returnValues\n        this.setState({\n            matchState: MatchState.Result,\n            matchResult: {\n                isVictory: data.winner === Lina.account(),\n                opponent: data.p1 === Lina.account() ? data.p2 : data.p1,\n                opponentPlayed: data.p1 === Lina.account() ? parseInt(data.p2Played) : parseInt(data.p1Played),\n                winner: data.winner\n            }\n        })\n    }\n\n    handleMatchPlayed = (_: any) => {\n        this.setState({\n            matchState: MatchState.Reveal\n        })\n    }\n\n    backToLobby = () => {\n        this.props.backToLobby()\n    }\n\n    backToPickPlay = () => {\n        JaJanken.Player.savePlay(JaJankenTechnique.None)\n        this.setState({currentPick: JaJankenTechnique.None, matchState: MatchState.PickPlay})\n    }\n\n    pickGuu = () => {\n        JaJanken.Player.savePlay(JaJankenTechnique.Guu)\n        this.setState({currentPick: JaJankenTechnique.Guu, matchState: MatchState.Commit})\n    }\n    pickChi = () => {\n        JaJanken.Player.savePlay(JaJankenTechnique.Chi)\n        this.setState({currentPick: JaJankenTechnique.Chi, matchState: MatchState.Commit})\n    }\n    pickPaa = () => {\n        JaJanken.Player.savePlay(JaJankenTechnique.Paa)\n        this.setState({currentPick: JaJankenTechnique.Paa, matchState: MatchState.Commit})\n    }\n\n    commitPlay = async () => {\n        JaJanken.Player.commitPlay(this.props.jajankenColiseum, this.state.match.matchId, this.state.currentPick).then(_ => {\n            this.setState({matchState: MatchState.CommitWait})\n        })\n    }\n\n    revealPlay = async () => {\n        await JaJanken.Player.revealPlay(this.props.jajankenColiseum, this.state.match.matchId, this.state.currentPick).then(_ => {\n            this.setState({matchState: MatchState.RevealWait})\n        })\n    }\n\n    render() {\n        let currentPick = TechniqueImg.fromTechnique(this.state.currentPick)\n\n        if (this.state.matchState === MatchState.Loading) {\n            return <p id=\"loader\" className=\"text-center\">Loading...</p>\n        } else if (this.state.matchState === MatchState.PickPlay) {\n            return <div>\n                <img src={TechniqueImg.guu} width={200} alt=\"guu\" onClick={this.pickGuu}/>\n                <img src={TechniqueImg.chi} width={200} alt=\"chi\" onClick={this.pickChi}/>\n                <img src={TechniqueImg.paa} width={200} alt=\"paa\" onClick={this.pickPaa}/>\n            </div>\n        } else if (this.state.matchState === MatchState.Commit) {\n            return <div>\n                <img src={currentPick} width={300} alt=\"currentPicket\"/>\n                <button className={\"btn-light\"} onClick={this.commitPlay}>Commit play!</button>\n                <div>\n                    <button className={\"btn-light\"} onClick={this.backToPickPlay}>Back to PickPlay</button>\n                </div>\n            </div>\n        } else if (this.state.matchState === MatchState.Reveal) {\n            return <div>\n                <img src={currentPick} width={300} alt=\"currentPicket\"/>\n                <button className={\"btn-light\"} onClick={this.revealPlay}>Fight!</button>\n            </div>\n        } else if (this.state.matchState === MatchState.Result) {\n            let opponentPick = TechniqueImg.fromTechnique(this.state.matchResult!.opponentPlayed)\n            return <div className=\"row\">\n                <div>\n                    <img src={currentPick} width={300} alt=\"currentPicket\"/>\n                    <span>...VS...</span>\n                    <img src={opponentPick} width={300} alt=\"currentPicket\"/>\n                </div>\n                <div>\n                    <h2>You {this.state.matchResult!.isVictory ? \"Win!\" : \"Loose :/\"}</h2>\n                    <button className={\"btn-light\"} onClick={this.backToLobby}>Back to Lobby!</button>\n                </div>\n            </div>\n        } else if (this.state.matchState === MatchState.CommitWait || this.state.matchState === MatchState.RevealWait) {\n            return <div>\n                <img src={currentPick} width={300} alt=\"currentPicket\"/>\n                <span className={\"btn-light\"}>waiting for opponent {this.state.matchState === MatchState.CommitWait ? \"commit\" : \"reveal\"}</span>\n            </div>\n        } else if (this.state.matchState === MatchState.MatchEnded) {\n            return <div>\n                <h4>Match is already finished</h4>\n                <button className={\"btn-light\"} onClick={this.backToLobby}>Back to Lobby!</button>\n            </div>\n        } else {\n            return <div>How did you get there?</div>\n        }\n    }\n}\n\nexport default withRouter(ColiseumMatch);","export default __webpack_public_path__ + \"static/media/chi.9d6708ec.png\";","export default __webpack_public_path__ + \"static/media/paa.063b3a7d.png\";","export default __webpack_public_path__ + \"static/media/hidden.ee575a9e.png\";","import guu from \"./techniques/guu.png\"\nimport chi from \"./techniques/chi.png\"\nimport paa from \"./techniques/paa.png\"\nimport hidden from \"./techniques/hidden.png\"\nimport {JaJankenTechnique} from \"../game/data/JaJankenTechnique\";\n\nexport const TechniqueImg = {\n    guu: guu,\n    chi: chi,\n    paa: paa,\n    hidden: hidden,\n    fromTechnique: (technique) => {\n        if (technique === JaJankenTechnique.Chi) {\n            return chi\n        } else if (technique === JaJankenTechnique.Guu) {\n            return guu\n        } else if (technique === JaJankenTechnique.Paa) {\n            return paa\n        } else {\n            return hidden\n        }\n    }\n}","import React, {Component} from \"react\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\nimport ContractLoader from \"../../../blockchain/ContractLoader\";\nimport Web3Utils from \"../../../blockchain/Web3Utils\";\nimport JaJanken from \"../../../game/JaJanken\";\nimport ColiseumMatch from \"./ColiseumMatch\";\nimport {CurrentMatch} from \"../../../game/data/CurrentMatch\";\nimport {PlayerStats} from \"../../../game/data/PlayerStats\";\nimport {GameStats} from \"../../../game/data/GameStats\";\nimport Lina from \"../../../blockchain/Lina\";\n\nenum GameState {\n    Loading,\n    NeedPay,\n    Lobby,\n    LookingMatch,\n    InMatch\n}\n\ninterface JaJankenColiseumProperties extends RouteComponentProps {\n    account: string,\n}\n\ninterface JaJankenColiseumState {\n    jajankenColiseum: any,\n    player: PlayerStats,\n    game: GameStats,\n    gameState: GameState,\n    currentMatch: CurrentMatch | null\n}\n\nclass JaJankenColiseum extends Component<JaJankenColiseumProperties, JaJankenColiseumState> {\n\n    constructor(props: JaJankenColiseumProperties) {\n        super(props)\n        this.state = {\n            jajankenColiseum: {},\n            player: {\n                inQueue: false,\n                inMatch: null,\n                nen: 0,\n                guu: 0,\n                paa: 0,\n                chi: 0\n            },\n            game: {\n                alivePlayers: 0,\n                totalGuu: 0,\n                totalPaa: 0,\n                totalChi: 0\n            },\n            gameState: GameState.Loading,\n            currentMatch: null\n        }\n    }\n\n    async componentDidMount() {\n        await this.loadColiseumData()\n        await this.subscribeToGameEvents()\n    }\n\n    async loadColiseumData() {\n        const coliseum = await ContractLoader.instantiateColiseum()\n\n        Web3Utils.setDefaultAccount(this.props.account)\n\n        this.setState({jajankenColiseum: coliseum})\n\n        JaJanken.getGameStats(this.state.jajankenColiseum).then(game => {\n                console.log(\"[init] game\", game)\n                this.setState({\n                    game: game\n                })\n            }\n        )\n\n        JaJanken.getMyProfile(coliseum).then(profile => {\n            console.log(\"[init] profile\", profile)\n            if (profile) {\n                if (profile.nen === 0) {\n                    window.alert(`Account ${Lina.account()} has previously lost all his nen, please re-join the game first!`)\n                    this.setState({gameState: GameState.NeedPay})\n                } else if (profile.inMatch != null) {\n                    JaJanken.getMatch(coliseum, profile.inMatch).then(match => {\n                        console.log(\"[init] match: \", match)\n                        if (match != null) {\n                            let opponentId = profile.inMatch === Lina.account() ? match.p2 : profile.inMatch\n                            JaJanken.getOpponent(coliseum, opponentId).then(opponent => {\n                                console.log(\"[init] opponent: \", opponent)\n                                this.setState({player: profile, gameState: GameState.InMatch, currentMatch: {p1: profile.inMatch!, p2: match.p2, matchId: profile.inMatch!}})\n                            })\n                        }\n                    })\n                } else if (profile.inQueue) {\n                    this.setState({player: profile, gameState: GameState.LookingMatch})\n                } else {\n                    this.setState({player: profile, gameState: GameState.Lobby})\n                }\n            } else {\n                window.alert(`Account ${Lina.account()} do not exist yet, please join the game first!`)\n                this.setState({gameState: GameState.NeedPay})\n            }\n        })\n        // JaJanken.getOpponent(coliseum, Lina.account()).then(opponent => {\n        //     console.log(\"[test] me: \", opponent)\n        // })\n        // JaJanken.getMatch(coliseum, Lina.account()!).then(match => {\n        //     console.log(\"[test] match: \", match)\n        //     JaJanken.getOpponent(coliseum, match!.p2).then(opponent => {\n        //         console.log(\"[test] opponent: \", opponent)\n        //     })\n        // })\n    }\n\n    handleStartMatch = (event: any) => {\n        const data = event.returnValues\n        this.setState({\n            gameState: GameState.InMatch,\n            currentMatch: {p1: data.p1, p2: data.p2, matchId: data.matchId}\n        })\n    }\n\n    handlePlayerJoinGame = (event: any) => {\n        const data = event.returnValues\n        if (data.p === Lina.account()) {\n            JaJanken.getMyProfile(this.state.jajankenColiseum).then(profile => {\n                    if (profile) {\n                        this.setState({player: profile})\n                    }\n                }\n            )\n            this.setState({gameState: GameState.Lobby})\n        }\n        JaJanken.getGameStats(this.state.jajankenColiseum).then(game => {\n                this.setState({game: game})\n            }\n        )\n    }\n\n    async subscribeToGameEvents() {\n        await this.state.jajankenColiseum\n\n        this.state.jajankenColiseum.events.PlayerJoin()\n            .on('data', this.handlePlayerJoinGame)\n        this.state.jajankenColiseum.events.MatchStart({p1: Lina.account()})\n            .on('data', this.handleStartMatch)\n        this.state.jajankenColiseum.events.MatchStart({p2: Lina.account()})\n            .on('data', this.handleStartMatch)\n    }\n\n    joinColiseum = async () => {\n        await JaJanken.joinColiseum(this.state.jajankenColiseum)\n    }\n\n    joinMatch = async () => {\n        await JaJanken.joinMatchQueue(this.state.jajankenColiseum).then(data => {\n            this.setState({gameState: GameState.LookingMatch})\n        }).catch(error => console.log(\"failed join Match:\", error))\n    }\n\n    backToLobby = () => {\n        this.setState({gameState: GameState.Lobby})\n    }\n\n    render() {\n        if (this.state.gameState === GameState.Loading) {\n            return <p id=\"loader\" className=\"text-center\">Loading...</p>\n        } else if (this.state.gameState === GameState.NeedPay) {\n            return <div>\n                Welcome to the Coliseum {Lina.account()} !\n                <div className=\"row\">\n                    <button className={\"btn-light\"} onClick={this.joinColiseum}>Join Coliseum</button>\n                </div>\n            </div>\n        } else if (this.state.gameState === GameState.Lobby) {\n            return <div>\n                Welcome to the Coliseum ! You got {this.state.player.nen} nen\n                <div className=\"row\">\n                    <button className={\"btn-light\"} onClick={this.joinMatch}>Join Match!</button>\n                </div>\n            </div>\n        } else if (this.state.gameState === GameState.LookingMatch) {\n            return <div>\n                Looking for an opponent\n            </div>\n        } else if (this.state.gameState === GameState.InMatch) {\n            if (this.state.currentMatch != null) {\n                return <div>\n                    <ColiseumMatch jajankenColiseum={this.state.jajankenColiseum} backToLobby={this.backToLobby}\n                                   currentMatch={this.state.currentMatch}/>\n                </div>\n            } else {\n                return <div className=\"row\">\n                    <button className={\"btn-light\"} onClick={this.backToLobby}>Back to Lobby!</button>\n                </div>\n            }\n        } else {\n            return <div>How did you get there?</div>\n        }\n    }\n}\n\nexport default withRouter(JaJankenColiseum);","import './App.scss';\nimport HomeView from \"./web/views/HomeView\";\nimport React, {Component} from 'react';\nimport Web3Utils from \"./blockchain/Web3Utils\";\nimport Navbar from \"./web/views/Navbar\";\n\nimport {library} from '@fortawesome/fontawesome-svg-core'\nimport {faGithub, faLinkedinIn} from '@fortawesome/free-brands-svg-icons';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport JaJankenColiseum from \"./web/views/coliseum/JaJankenColiseum\";\n\nlibrary.add(faGithub, faLinkedinIn);\n\n\ninterface AppProperties {\n}\n\ninterface AppState {\n    account: string,\n    loading: boolean\n}\n\nexport default class App extends Component<AppProperties, AppState> {\n    constructor(props: AppProperties) {\n        super(props)\n        this.state = {\n            account: '0x0',\n            loading: true\n        }\n    }\n\n    async componentDidMount() {\n        await Web3Utils.loadMetamask()\n        await this.loadBlockchainData()\n    }\n\n    async loadBlockchainData() {\n        const accounts = await Web3Utils.getAccounts()\n        console.log(\"accounts: \", accounts)\n        this.setState({account: accounts[0], loading: false})\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n        } else {\n            return <div className=\"App\">\n                <Navbar account={this.state.account}/>\n                <div className=\"container-fluid mt-5\">\n                    <div className=\"row\">\n                        <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{maxWidth: '100%'}}>\n                            <BrowserRouter>\n                                <Switch>\n                                    <Route path={\"/coliseum\"}>\n                                        <JaJankenColiseum account={this.state.account}/>\n                                    </Route>\n                                    <Route path={\"/\"}>\n                                        <HomeView/>\n                                    </Route>\n                                </Switch>\n                            </BrowserRouter>\n                        </main>\n                    </div>\n                </div>\n            </div>\n        }\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}