{"version":3,"sources":["web/views/coliseum/ColiseumMatch.tsx","web/views/HomeView.tsx","blockchain/Web3Utils.tsx","web/views/Navbar.tsx","utils/NumberUtils.tsx","blockchain/ContractLoader.tsx","game/Game.tsx","resources/images.js","resources/techniques/guu.png","resources/techniques/chi.png","resources/techniques/paa.png","resources/techniques/hidden.png","web/views/coliseum/JaJankenColiseum.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["MatchState","HomeView","props","componentDidMount","a","setState","loading","startColiseum","history","push","state","this","id","className","onClick","Component","withRouter","Web3Utils","window","ethereum","request","method","web3","Web3","currentProvider","alert","eth","net","getId","Navbar","account","href","target","rel","icon","NumberUtils","value","parseInt","toString","ContractLoader","getNetwork","networkId","console","log","JaJankenColiseumData","JaJankenColiseum","networks","Contract","abi","address","Game","contract","methods","entranceTicketFee","call","from","getGameEntranceTicketFee","entranceTicket","joinGame","send","joinMatch","alivePlayers","totalPaa","totalChi","totalGuu","getProfile","profile","nen","guu","paa","chi","playerAddress","getPlayer","_player","player","techniques","TechniqueImg","hidden","GameState","ColiseumMatch","nenBalance","availableGuu","availablePaa","availableChi","matchState","Loading","loadColiseumData","jajankenColiseum","coliseum","getMyProfile","Result","PickPlay","src","width","alt","handleStartMatch","event","gameState","InMatch","currentMatch","p1","p2","matchId","handlePlayerJoinGame","p","then","getGameStat","game","joinColiseum","joinMatchQueue","backToLobby","Lobby","subscribeToGameEvents","getAccounts","accounts","instantiateColiseum","NeedPay","events","PlayerJoin","on","MatchStart","LookingMatch","library","add","faGithub","faLinkedinIn","App","loadMetamask","loadBlockchainData","role","style","maxWidth","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86b71e1f.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\nimport Game from \"../../../game/Game\";\nimport NumberUtils from \"../../../utils/NumberUtils\";\nimport {TechniqueImg} from \"../../../resources/images\";\nimport {CurrentMatch} from \"../../../game/data/CurrentMatch\";\n\n\nenum MatchState {\n    Loading,\n    PickPlay,\n    Commit,\n    Reveal,\n    Result\n}\n\ninterface ColiseumMatchProperties extends RouteComponentProps {\n    account: String,\n    jajankenColiseum: any,\n    currentMatch: CurrentMatch,\n    backToLobby: () => void\n}\n\ninterface ColiseumMatchState {\n    nenBalance: number,\n    availableGuu: number,\n    availablePaa: number,\n    availableChi: number,\n    matchState: MatchState\n}\n\nclass ColiseumMatch extends Component<ColiseumMatchProperties, ColiseumMatchState> {\n\n    constructor(props: ColiseumMatchProperties) {\n        super(props)\n        this.state = {\n            nenBalance: 0,\n            availableGuu: 0,\n            availablePaa: 0,\n            availableChi: 0,\n            matchState: MatchState.Loading\n        }\n    }\n\n    async componentDidMount() {\n        await this.loadColiseumData()\n    }\n\n    async loadColiseumData() {\n        let coliseum = await this.props.jajankenColiseum\n        let profile = await Game.getMyProfile(coliseum)\n        if (profile) {\n            let nen = NumberUtils.from(profile.nen)\n            if (nen === 0) {\n                this.setState({matchState: MatchState.Result})\n                window.alert(`Account ${this.props.account} has previously lost all his nen, please re-join the game first!`)\n            }\n            this.setState({\n                nenBalance: nen,\n                availableGuu: NumberUtils.from(profile.guu),\n                availablePaa: NumberUtils.from(profile.paa),\n                availableChi: NumberUtils.from(profile.chi),\n                matchState: MatchState.PickPlay\n            })\n        } else {\n            this.setState({matchState: MatchState.Result})\n            window.alert(`Account ${this.props.account} do not exist yet, please join the game first!`)\n        }\n    }\n\n    render() {\n        return <div>\n            <img src={TechniqueImg.guu} width={300} alt=\"error with messenger QR code.\"/>\n        </div>\n    }\n}\n\nexport default withRouter(ColiseumMatch);","import React, {Component} from \"react\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\n\n\ninterface HomeViewProperties extends RouteComponentProps {\n}\ninterface HomeViewState {\n    loading: Boolean\n}\n\nclass HomeView extends Component<HomeViewProperties, HomeViewState> {\n\n    constructor(props: HomeViewProperties) {\n        super(props)\n        this.state = {\n            loading: true\n        }\n    }\n\n    componentDidMount = async () => {\n        this.setState({loading: false})\n    }\n\n    startColiseum = async () => {\n        this.props.history.push('/coliseum')\n    }\n\n\n    render() {\n        if(this.state.loading) {\n            return <p id=\"loader\" className=\"text-center\">Loading...</p>\n        } else {\n            return <div>\n                <div className=\"row\">\n                Hello World !\n                </div>\n\n                <div className=\"row\">\n                    <button className={\"btn-light\"} onClick={this.startColiseum}>Launch Coliseum</button>\n                </div>\n            </div>\n        }\n    }\n}\n\nexport default withRouter(HomeView);","import Web3 from 'web3'\n\ndeclare let window: any;\n\nexport default class Web3Utils {\n\n    static async loadMetamask() {\n        if (window.ethereum) {\n            await window.ethereum.request({ method: 'eth_requestAccounts' })\n            window.web3 = new Web3(window.ethereum)\n        }\n        else if (window.web3) {\n            window.web3 = new Web3(window.web3.currentProvider)\n        }\n        else {\n            window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n        }\n    }\n\n    static async getNetwork() {\n        return window.web3.eth.net.getId()\n    }\n\n    static async getAccounts() {\n        return window.ethereum.request({ method: 'eth_requestAccounts' })\n    }\n\n}","import React, {Component} from 'react';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\ntype NavbarProperties = {\n    account: String,\n}\ntype NavbarState = {\n    account: String,\n    loading: Boolean\n}\n\nexport default class Navbar extends Component<NavbarProperties, NavbarState> {\n    constructor(props: NavbarProperties) {\n        super(props)\n        this.state = {\n            account: props.account,\n            loading: true\n        }\n    }\n\n    async componentDidMount() {\n        this.setState({loading: false})\n    }\n\n    render() {\n        return <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n                <a\n                    className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n                    href=\"https://github.com/Draym/jajanken-evm\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <span><FontAwesomeIcon icon={['fab', \"github\"]}/> Game Contracts</span>\n                </a>\n\n                <ul className=\"navbar-nav px-3\">\n                    <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n                        <small className=\"text-secondary\">\n                            <small id=\"account\">{this.props.account}</small>\n                        </small>\n                    </li>\n                </ul>\n            </nav>\n    }\n}","export default class NumberUtils {\n    static from(value: any): number {\n        return parseInt(value.toString())\n    }\n}","import JaJankenColiseum from './contracts/JaJankenColiseum.json'\nimport Web3Utils from \"./Web3Utils\";\n\ndeclare let window: any;\n\nexport default class ContractLoader {\n    static async instantiateColiseum() {\n        const networkId = await Web3Utils.getNetwork()\n        console.log(\"network\", networkId)\n        // @ts-ignore\n        const JaJankenColiseumData = JaJankenColiseum.networks[networkId]\n        console.log(\"JaJankenColiseumData\", JaJankenColiseumData)\n        if (JaJankenColiseumData) {\n            return new window.web3.eth.Contract(JaJankenColiseum.abi, JaJankenColiseumData.address)\n        } else {\n            window.alert('JaJankenColiseum contract not deployed to detected network.')\n        }\n\n    }\n}","import NumberUtils from \"../utils/NumberUtils\";\nimport {PlayerStats} from \"./data/PlayerStats\";\nimport {GameStats} from \"./data/GameStats\";\nimport {OpponentStat} from \"./data/OpponentStat\";\n\n\nexport default class Game {\n\n    static async getGameEntranceTicketFee(contract: any): Promise<number> {\n        return await contract.methods.entranceTicketFee().call()\n    }\n\n    static async joinColiseum(contract: any, from: string) {\n        const entranceTicket = await this.getGameEntranceTicketFee(contract)\n        await contract.methods.joinGame().send({from: from, value: entranceTicket})\n    }\n\n    static async joinMatchQueue(contract: any, from: string) {\n        await contract.methods.joinMatch().send({from: from})\n    }\n\n    static async getGameStat(contract: any): Promise<GameStats> {\n        const alivePlayers = await contract.methods.alivePlayers().call()\n        const totalPaa = await contract.methods.totalPaa().call()\n        const totalChi = await contract.methods.totalChi().call()\n        const totalGuu = await contract.methods.totalGuu().call()\n        return {\n            alivePlayers: NumberUtils.from(alivePlayers),\n            totalPaa: NumberUtils.from(totalPaa),\n            totalChi: NumberUtils.from(totalChi),\n            totalGuu: NumberUtils.from(totalGuu)\n        }\n    }\n\n    static async getMyProfile(contract: any): Promise<PlayerStats | null> {\n        const profile = await contract.methods.getProfile().call()\n        if (profile) {\n            return {\n                nen: NumberUtils.from(profile.nen),\n                guu: NumberUtils.from(profile.guu),\n                paa: NumberUtils.from(profile.paa),\n                chi: NumberUtils.from(profile.chi)\n            }\n        } else return null\n    }\n\n    static async getOpponent(contract: any, playerAddress: any): Promise<OpponentStat | null> {\n        const player = await contract.methods.getPlayer({_player: playerAddress}).call()\n        if (player) {\n            return {\n                nen: NumberUtils.from(player.nen),\n                techniques: NumberUtils.from(player.techniques),\n            }\n        } else return null\n    }\n}","import guu from \"./techniques/guu.png\"\nimport chi from \"./techniques/chi.png\"\nimport paa from \"./techniques/paa.png\"\nimport hidden from \"./techniques/hidden.png\"\n\nexport const TechniqueImg = {\n    guu: guu,\n    chi: chi,\n    paa: paa,\n    hidden: hidden\n}","export default __webpack_public_path__ + \"static/media/guu.b4d646ff.png\";","export default __webpack_public_path__ + \"static/media/chi.9d6708ec.png\";","export default __webpack_public_path__ + \"static/media/paa.063b3a7d.png\";","export default __webpack_public_path__ + \"static/media/hidden.ee575a9e.png\";","import React, {Component} from \"react\";\nimport NumberUtils from \"../../../utils/NumberUtils\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\nimport ContractLoader from \"../../../blockchain/ContractLoader\";\nimport Web3Utils from \"../../../blockchain/Web3Utils\";\nimport Game from \"../../../game/Game\";\nimport ColiseumMatch from \"./ColiseumMatch\";\nimport {CurrentMatch} from \"../../../game/data/CurrentMatch\";\nimport {PlayerStats} from \"../../../game/data/PlayerStats\";\nimport {GameStats} from \"../../../game/data/GameStats\";\n\nenum GameState {\n    Loading,\n    NeedPay,\n    Lobby,\n    LookingMatch,\n    InMatch\n}\n\ninterface JaJankenColiseumProperties extends RouteComponentProps {\n    account: string,\n}\n\ninterface JaJankenColiseumState {\n    account: string,\n    jajankenColiseum: any,\n    player: PlayerStats,\n    game: GameStats,\n    gameState: GameState,\n    currentMatch: CurrentMatch | null\n}\n\nclass JaJankenColiseum extends Component<JaJankenColiseumProperties, JaJankenColiseumState> {\n\n    constructor(props: JaJankenColiseumProperties) {\n        super(props)\n        this.state = {\n            account: props.account,\n            jajankenColiseum: {},\n            player: {\n                nen: 0,\n                guu: 0,\n                paa: 0,\n                chi: 0\n            },\n            game: {\n                alivePlayers: 0,\n                totalGuu: 0,\n                totalPaa: 0,\n                totalChi: 0\n            },\n            gameState: GameState.Loading,\n            currentMatch: null\n        }\n    }\n\n    async componentDidMount() {\n        await this.loadColiseumData()\n        await this.subscribeToGameEvents()\n    }\n\n    async loadColiseumData() {\n        const accounts = await Web3Utils.getAccounts()\n        const coliseum = await ContractLoader.instantiateColiseum()\n        this.setState({jajankenColiseum: coliseum, account: accounts[0]})\n\n        const profile = await Game.getMyProfile(coliseum)\n        console.log(\"profile\", profile)\n        if (profile) {\n            let nen = NumberUtils.from(profile.nen)\n            if (nen === 0) {\n                window.alert(`Account ${this.state.account} has previously lost all his nen, please re-join the game first!`)\n                this.setState({gameState: GameState.NeedPay})\n            } else {\n                this.setState({\n                    player: profile,\n                    gameState: GameState.Lobby\n                })\n            }\n        } else {\n            window.alert(`Account ${this.state.account} do not exist yet, please join the game first!`)\n            this.setState({gameState: GameState.NeedPay})\n        }\n        Game.getGameStat(this.state.jajankenColiseum).then(game => {\n                this.setState({\n                    game: game\n                })\n            }\n        )\n    }\n\n    handleStartMatch = (event: any) => {\n        this.setState({\n            gameState: GameState.InMatch,\n            currentMatch: {p1: event.p1, p2: event.p2, matchId: event.matchId}\n        })\n    }\n\n    handlePlayerJoinGame = (event: any) => {\n        if (event.p === this.state.account) {\n            Game.getMyProfile(this.state.jajankenColiseum).then(profile => {\n                    if (profile) {\n                        this.setState({\n                            player: profile\n                        })\n                    }\n                }\n            )\n        }\n        Game.getGameStat(this.state.jajankenColiseum).then(game => {\n                this.setState({\n                    game: game\n                })\n            }\n        )\n    }\n\n    async subscribeToGameEvents() {\n        await this.state.jajankenColiseum\n\n        this.state.jajankenColiseum.events.PlayerJoin()\n            .on('data', this.handlePlayerJoinGame)\n        this.state.jajankenColiseum.events.MatchStart({p1: this.state.account})\n            .on('data', this.handleStartMatch)\n        this.state.jajankenColiseum.events.MatchStart({p2: this.state.account})\n            .on('data', this.handleStartMatch)\n    }\n\n    joinColiseum = async () => {\n        await Game.joinColiseum(this.state.jajankenColiseum, this.state.account)\n    }\n\n    joinMatch = async () => {\n        await Game.joinMatchQueue(this.state.jajankenColiseum, this.state.account)\n    }\n\n\n    backToLobby = () => {\n        this.setState({gameState: GameState.Lobby})\n    }\n\n    render() {\n        if (this.state.gameState === GameState.Loading) {\n            return <p id=\"loader\" className=\"text-center\">Loading...</p>\n        } else if (this.state.gameState === GameState.NeedPay) {\n            return <div>\n                Welcome to the Coliseum !\n                <div className=\"row\">\n                    <button className={\"btn-light\"} onClick={this.joinColiseum}>Join Coliseum</button>\n                </div>\n            </div>\n        } else if (this.state.gameState === GameState.Lobby) {\n            return <div>\n                Welcome to the Coliseum ! You got {this.state.player.nen} nen\n                <div className=\"row\">\n                    <button className={\"btn-light\"} onClick={this.joinMatch}>Join Match!</button>\n                </div>\n            </div>\n        } else if (this.state.gameState === GameState.LookingMatch) {\n            return <div>\n                Looking for an opponent\n            </div>\n        } else if (this.state.gameState === GameState.InMatch) {\n            if (this.state.currentMatch != null) {\n                return <div>\n                    <ColiseumMatch account={this.state.account} jajankenColiseum={this.state.jajankenColiseum} backToLobby={this.backToLobby}\n                                   currentMatch={this.state.currentMatch}/>\n                </div>\n            } else {\n                <div className=\"row\">\n                    <button className={\"btn-light\"} onClick={this.backToLobby}>Back to Lobby!</button>\n                </div>\n            }\n        } else {\n            return <div>How did you get there?</div>\n        }\n    }\n}\n\nexport default withRouter(JaJankenColiseum);","import './App.scss';\nimport HomeView from \"./web/views/HomeView\";\nimport React, {Component} from 'react';\nimport Web3Utils from \"./blockchain/Web3Utils\";\nimport Navbar from \"./web/views/Navbar\";\n\nimport {library} from '@fortawesome/fontawesome-svg-core'\nimport {faGithub, faLinkedinIn} from '@fortawesome/free-brands-svg-icons';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport JaJankenColiseum from \"./web/views/coliseum/JaJankenColiseum\";\n\nlibrary.add(faGithub, faLinkedinIn);\n\n\ninterface AppProperties {\n}\n\ninterface AppState {\n    account: string,\n    loading: boolean\n}\n\nexport default class App extends Component<AppProperties, AppState> {\n    constructor(props: AppProperties) {\n        super(props)\n        this.state = {\n            account: '0x0',\n            loading: true\n        }\n    }\n\n    async componentDidMount() {\n        await Web3Utils.loadMetamask()\n        await this.loadBlockchainData()\n    }\n\n    async loadBlockchainData() {\n        const accounts = await Web3Utils.getAccounts()\n        this.setState({account: accounts[0], loading: false})\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n        } else {\n            return <div className=\"App\">\n                <Navbar account={this.state.account}/>\n                <div className=\"container-fluid mt-5\">\n                    <div className=\"row\">\n                        <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{maxWidth: '100%'}}>\n                            <BrowserRouter>\n                                <Switch>\n                                    <Route path={\"/coliseum\"}>\n                                        <JaJankenColiseum account={this.state.account}/>\n                                    </Route>\n                                    <Route path={\"/\"}>\n                                        <HomeView/>\n                                    </Route>\n                                </Switch>\n                            </BrowserRouter>\n                        </main>\n                    </div>\n                </div>\n            </div>\n        }\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}