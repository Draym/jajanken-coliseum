{"version":3,"sources":["web/views/HomeView.tsx","blockchain/Web3Utils.tsx","web/views/Navbar.tsx","utils/NumberUtils.tsx","blockchain/ContractLoader.tsx","web/views/JaJankenColiseumView.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["HomeView","props","componentDidMount","a","setState","loading","startColiseum","history","push","state","this","id","className","onClick","Component","withRouter","Web3Utils","window","ethereum","request","method","web3","Web3","currentProvider","alert","eth","net","getId","Navbar","account","href","target","rel","icon","NumberUtils","value","parseInt","toString","ContractLoader","getNetwork","networkId","console","log","JaJankenColiseumData","JaJankenColiseum","networks","Contract","abi","address","JaJankenColiseumView","joinColiseum","jajankenColiseum","methods","entranceTicketFee","call","entranceTicket","joinGame","send","from","nenBalance","availableGuu","availablePaa","availableChi","loadColiseumData","loadMetamask","instantiateColiseum","coliseum","getAccounts","accounts","getProfile","profile","nen","guu","paa","chi","library","add","faGithub","faLinkedinIn","App","loadBlockchainData","role","style","maxWidth","Suspense","fallback","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8d0af76.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\n\n\ninterface HomeViewProperties extends RouteComponentProps {\n}\ninterface HomeViewState {\n    loading: Boolean\n}\n\nclass HomeView extends Component<HomeViewProperties, HomeViewState> {\n\n    constructor(props: HomeViewProperties) {\n        super(props)\n        this.state = {\n            loading: true\n        }\n    }\n\n    componentDidMount = async () => {\n        this.setState({loading: false})\n    }\n\n    startColiseum = async () => {\n        this.props.history.push('/coliseum')\n    }\n\n\n    render() {\n        if(this.state.loading) {\n            return <p id=\"loader\" className=\"text-center\">Loading...</p>\n        } else {\n            return <div>\n                <div className=\"row\">\n                Hello World !\n                </div>\n\n                <div className=\"row\">\n                    <button className={\"btn-light\"} onClick={this.startColiseum}>Enter Coliseum</button>\n                </div>\n            </div>\n        }\n    }\n}\n\nexport default withRouter(HomeView);","import Web3 from 'web3'\n\ndeclare let window: any;\n\nexport default class Web3Utils {\n\n    static async loadMetamask() {\n        if (window.ethereum) {\n            await window.ethereum.request({ method: 'eth_requestAccounts' })\n            window.web3 = new Web3(window.ethereum)\n        }\n        else if (window.web3) {\n            window.web3 = new Web3(window.web3.currentProvider)\n        }\n        else {\n            window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n        }\n    }\n\n    static async getNetwork() {\n        return window.web3.eth.net.getId()\n    }\n\n    static async getAccounts() {\n        return window.ethereum.request({ method: 'eth_requestAccounts' })\n    }\n\n}","import React, {Component} from 'react';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\ntype NavbarProperties = {\n    account: String,\n}\ntype NavbarState = {\n    account: String,\n    loading: Boolean\n}\n\nexport default class Navbar extends Component<NavbarProperties, NavbarState> {\n    constructor(props: NavbarProperties) {\n        super(props)\n        this.state = {\n            account: props.account,\n            loading: true\n        }\n    }\n\n    async componentDidMount() {\n        this.setState({loading: false})\n    }\n\n    render() {\n        return <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n                <a\n                    className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n                    href=\"https://github.com/Draym/jajanken-evm\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <span><FontAwesomeIcon icon={['fab', \"github\"]}/> Game Contracts</span>\n                </a>\n\n                <ul className=\"navbar-nav px-3\">\n                    <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n                        <small className=\"text-secondary\">\n                            <small id=\"account\">{this.props.account}</small>\n                        </small>\n                    </li>\n                </ul>\n            </nav>\n    }\n}","export default class NumberUtils {\n    static from(value: any): number {\n        return parseInt(value.toString())\n    }\n}","import JaJankenColiseum from './contracts/JaJankenColiseum.json'\nimport Web3Utils from \"./Web3Utils\";\n\ndeclare let window: any;\n\nexport default class ContractLoader {\n    static async instantiateColiseum() {\n        const networkId = await Web3Utils.getNetwork()\n        console.log(\"network\", networkId)\n        // @ts-ignore\n        const JaJankenColiseumData = JaJankenColiseum.networks[networkId]\n        console.log(\"JaJankenColiseumData\", JaJankenColiseumData)\n        if (JaJankenColiseumData) {\n            return new window.web3.eth.Contract(JaJankenColiseum.abi, JaJankenColiseumData.address)\n        } else {\n            window.alert('JaJankenColiseum contract not deployed to detected network.')\n        }\n\n    }\n}","import React, {Component} from \"react\";\nimport NumberUtils from \"../../utils/NumberUtils\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\nimport ContractLoader from \"../../blockchain/ContractLoader\";\nimport Web3Utils from \"../../blockchain/Web3Utils\";\n\n\ninterface JaJankenColiseumProperties extends RouteComponentProps {\n    account: String,\n}\n\ninterface JaJankenColiseumState {\n    account: String,\n    jajankenColiseum: any,\n    nenBalance: number,\n    availableGuu: number,\n    availablePaa: number,\n    availableChi: number,\n    loading: Boolean\n}\n\nclass JaJankenColiseumView extends Component<JaJankenColiseumProperties, JaJankenColiseumState> {\n\n    constructor(props: JaJankenColiseumProperties) {\n        super(props)\n        this.state = {\n            account: props.account,\n            jajankenColiseum: {},\n            nenBalance: 0,\n            availableGuu: 0,\n            availablePaa: 0,\n            availableChi: 0,\n            loading: true\n        }\n    }\n\n    async componentDidMount() {\n        await this.loadColiseumData()\n    }\n\n    async loadColiseumData() {\n        await Web3Utils.loadMetamask()\n        let coliseum = await ContractLoader.instantiateColiseum()\n        const accounts = await Web3Utils.getAccounts()\n        this.setState({jajankenColiseum: coliseum, account: accounts[0]})\n        let entranceTicket = await this.state.jajankenColiseum.methods.entranceTicketFee().call()\n        console.log(\"entranceTicket\", entranceTicket)\n        let profile = await this.state.jajankenColiseum.methods.getProfile().call()\n        console.log(\"profile\", profile)\n        if (profile) {\n            let nen = NumberUtils.from(profile.nen)\n            if (nen === 0) {\n                window.alert(`Account ${this.state.account} has previously lost all his nen, please re-join the game first!`)\n            }\n            this.setState({\n                nenBalance: nen,\n                availableGuu: NumberUtils.from(profile.guu),\n                availablePaa: NumberUtils.from(profile.paa),\n                availableChi: NumberUtils.from(profile.chi)\n            })\n        } else {\n            console.log(2)\n            window.alert(`Account ${this.state.account} do not exist yet, please join the game first!`)\n        }\n\n        this.setState({loading: false})\n    }\n\n    joinColiseum = async () => {\n        let entranceTicket = await this.state.jajankenColiseum.methods.entranceTicketFee().call()\n        await this.state.jajankenColiseum.methods.joinGame().send({from: this.state.account, value: entranceTicket})\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <p id=\"loader\" className=\"text-center\">Loading...</p>\n        } else {\n            return <div>\n                In the Coliseum !\n\n                <div className=\"row\">\n                    <button className={\"btn-light\"} onClick={this.joinColiseum}>Enter Coliseum</button>\n                </div>\n            </div>\n        }\n    }\n}\n\nexport default withRouter(JaJankenColiseumView);","import './App.scss';\nimport HomeView from \"./web/views/HomeView\";\nimport React, {Component} from 'react';\nimport Web3Utils from \"./blockchain/Web3Utils\";\nimport Navbar from \"./web/views/Navbar\";\n\nimport {library} from '@fortawesome/fontawesome-svg-core'\nimport {faGithub, faLinkedinIn} from '@fortawesome/free-brands-svg-icons';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport JaJankenColiseumView from \"./web/views/JaJankenColiseumView\";\n\nlibrary.add(faGithub, faLinkedinIn);\n\n\ninterface AppProperties {\n}\n\ninterface AppState {\n    account: String,\n    loading: Boolean\n}\n\nexport default class App extends Component<AppProperties, AppState> {\n    constructor(props: AppProperties) {\n        super(props)\n        this.state = {\n            account: '0x0',\n            loading: true\n        }\n    }\n\n    async componentDidMount() {\n        await Web3Utils.loadMetamask()\n        await this.loadBlockchainData()\n    }\n\n    async loadBlockchainData() {\n        const accounts = await Web3Utils.getAccounts()\n        this.setState({account: accounts[0], loading: false})\n    }\n\n    render() {\n        const loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>;\n        return <div className=\"App\">\n            <Navbar account={this.state.account}/>\n            <div className=\"container-fluid mt-5\">\n                <div className=\"row\">\n                    <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{maxWidth: '100%'}}>\n                        <BrowserRouter>\n                            <React.Suspense fallback={loading()}>\n                                <Switch>\n                                    <Route path={\"/coliseum\"}>\n                                        <JaJankenColiseumView account={this.state.account}/>\n                                    </Route>\n                                    <Route path={\"/\"}>\n                                        <HomeView/>\n                                    </Route>\n                                </Switch>\n                            </React.Suspense>\n                        </BrowserRouter>\n                    </main>\n                </div>\n            </div>\n        </div>\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}