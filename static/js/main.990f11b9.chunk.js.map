{"version":3,"sources":["web/views/coliseum/ColiseumMatch.tsx","web/views/HomeView.tsx","blockchain/Web3Utils.tsx","web/views/Navbar.tsx","blockchain/ContractLoader.tsx","utils/NumberUtils.tsx","blockchain/Lina.tsx","game/Game.tsx","resources/images.js","resources/techniques/guu.png","resources/techniques/chi.png","resources/techniques/paa.png","resources/techniques/hidden.png","web/views/coliseum/JaJankenColiseum.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["MatchState","HomeView","props","componentDidMount","a","setState","loading","startColiseum","history","push","state","this","id","className","onClick","Component","withRouter","Web3Utils","window","ethereum","request","method","web3","Web3","currentProvider","alert","eth","net","getId","getAccounts","defaultAccount","account","Navbar","href","target","rel","icon","ContractLoader","getNetwork","networkId","console","log","JaJankenColiseumData","JaJankenColiseum","networks","Contract","abi","address","NumberUtils","value","parseInt","toString","Lina","data","call","from","send","getDefaultAccount","Game","contract","methods","entranceTicketFee","getGameEntranceTicketFee","entranceTicket","joinGame","joinMatch","alivePlayers","totalPaa","totalChi","totalGuu","getProfile","profile","queued","inQueue","inMatch","nen","guu","paa","chi","playerAddress","getPlayer","_player","player","techniques","TechniqueImg","hidden","GameState","ColiseumMatch","nenBalance","availableGuu","availablePaa","availableChi","matchState","Loading","loadColiseumData","jajankenColiseum","coliseum","getMyProfile","Result","PickPlay","src","width","alt","handleStartMatch","event","returnValues","gameState","InMatch","currentMatch","p1","p2","matchId","handlePlayerJoinGame","p","then","Lobby","getGameStats","game","joinColiseum","joinMatchQueue","LookingMatch","catch","error","backToLobby","subscribeToGameEvents","instantiateColiseum","setDefaultAccount","NeedPay","events","PlayerJoin","on","MatchStart","library","add","faGithub","faLinkedinIn","App","loadMetamask","loadBlockchainData","accounts","role","style","maxWidth","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.990f11b9.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\nimport Game from \"../../../game/Game\";\nimport NumberUtils from \"../../../utils/NumberUtils\";\nimport {TechniqueImg} from \"../../../resources/images\";\nimport {CurrentMatch} from \"../../../game/data/CurrentMatch\";\n\n\nenum MatchState {\n    Loading,\n    PickPlay,\n    Commit,\n    Reveal,\n    Result\n}\n\ninterface ColiseumMatchProperties extends RouteComponentProps {\n    account: String,\n    jajankenColiseum: any,\n    currentMatch: CurrentMatch,\n    backToLobby: () => void\n}\n\ninterface ColiseumMatchState {\n    nenBalance: number,\n    availableGuu: number,\n    availablePaa: number,\n    availableChi: number,\n    matchState: MatchState\n}\n\nclass ColiseumMatch extends Component<ColiseumMatchProperties, ColiseumMatchState> {\n\n    constructor(props: ColiseumMatchProperties) {\n        super(props)\n        this.state = {\n            nenBalance: 0,\n            availableGuu: 0,\n            availablePaa: 0,\n            availableChi: 0,\n            matchState: MatchState.Loading\n        }\n    }\n\n    async componentDidMount() {\n        await this.loadColiseumData()\n    }\n\n    async loadColiseumData() {\n        let coliseum = await this.props.jajankenColiseum\n        let profile = await Game.getMyProfile(coliseum)\n        if (profile) {\n            let nen = NumberUtils.from(profile.nen)\n            if (nen === 0) {\n                this.setState({matchState: MatchState.Result})\n                window.alert(`Account ${this.props.account} has previously lost all his nen, please re-join the game first!`)\n            }\n            this.setState({\n                nenBalance: nen,\n                availableGuu: NumberUtils.from(profile.guu),\n                availablePaa: NumberUtils.from(profile.paa),\n                availableChi: NumberUtils.from(profile.chi),\n                matchState: MatchState.PickPlay\n            })\n        } else {\n            this.setState({matchState: MatchState.Result})\n            window.alert(`Account ${this.props.account} do not exist yet, please join the game first!`)\n        }\n    }\n\n    render() {\n        return <div>\n            <img src={TechniqueImg.guu} width={300} alt=\"error with messenger QR code.\"/>\n        </div>\n    }\n}\n\nexport default withRouter(ColiseumMatch);","import React, {Component} from \"react\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\n\n\ninterface HomeViewProperties extends RouteComponentProps {\n}\ninterface HomeViewState {\n    loading: Boolean\n}\n\nclass HomeView extends Component<HomeViewProperties, HomeViewState> {\n\n    constructor(props: HomeViewProperties) {\n        super(props)\n        this.state = {\n            loading: true\n        }\n    }\n\n    componentDidMount = async () => {\n        this.setState({loading: false})\n    }\n\n    startColiseum = async () => {\n        this.props.history.push('/coliseum')\n    }\n\n\n    render() {\n        if(this.state.loading) {\n            return <p id=\"loader\" className=\"text-center\">Loading...</p>\n        } else {\n            return <div>\n                <div className=\"row\">\n                Hello World !\n                </div>\n\n                <div className=\"row\">\n                    <button className={\"btn-light\"} onClick={this.startColiseum}>Launch Coliseum</button>\n                </div>\n            </div>\n        }\n    }\n}\n\nexport default withRouter(HomeView);","import Web3 from 'web3'\n\ndeclare let window: any;\n\nexport default class Web3Utils {\n\n    static async loadMetamask() {\n        if (window.ethereum) {\n            await window.ethereum.request({ method: 'eth_requestAccounts' })\n            window.web3 = new Web3(window.ethereum)\n        }\n        else if (window.web3) {\n            window.web3 = new Web3(window.web3.currentProvider)\n        }\n        else {\n            window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n        }\n    }\n\n    static async getNetwork() {\n        return window.web3.eth.net.getId()\n    }\n\n    static async getAccounts() {\n        return window.web3.eth.getAccounts()//window.ethereum.request({ method: 'eth_requestAccounts' })\n    }\n\n    static getDefaultAccount() {\n        return window.web3.eth.defaultAccount\n    }\n\n    static setDefaultAccount(account: any) {\n        window.web3.eth.defaultAccount = account\n    }\n}","import React, {Component} from 'react';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\ntype NavbarProperties = {\n    account: String,\n}\ntype NavbarState = {\n    account: String,\n    loading: Boolean\n}\n\nexport default class Navbar extends Component<NavbarProperties, NavbarState> {\n    constructor(props: NavbarProperties) {\n        super(props)\n        this.state = {\n            account: props.account,\n            loading: true\n        }\n    }\n\n    async componentDidMount() {\n        this.setState({loading: false})\n    }\n\n    render() {\n        return <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n                <a\n                    className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n                    href=\"https://github.com/Draym/jajanken-evm\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <span><FontAwesomeIcon icon={['fab', \"github\"]}/> Game Contracts</span>\n                </a>\n\n                <ul className=\"navbar-nav px-3\">\n                    <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n                        <small className=\"text-secondary\">\n                            <small id=\"account\">{this.props.account}</small>\n                        </small>\n                    </li>\n                </ul>\n            </nav>\n    }\n}","import JaJankenColiseum from './contracts/JaJankenColiseum.json'\nimport Web3Utils from \"./Web3Utils\";\n\ndeclare let window: any;\n\nexport default class ContractLoader {\n    static async instantiateColiseum() {\n        const networkId = await Web3Utils.getNetwork()\n        console.log(\"network\", networkId)\n        // @ts-ignore\n        const JaJankenColiseumData = JaJankenColiseum.networks[networkId]\n        console.log(\"JaJankenColiseumData\", JaJankenColiseumData)\n        if (JaJankenColiseumData) {\n            return new window.web3.eth.Contract(JaJankenColiseum.abi, JaJankenColiseumData.address)\n        } else {\n            window.alert('JaJankenColiseum contract not deployed to detected network.')\n        }\n\n    }\n}","export default class NumberUtils {\n    static from(value: any): number {\n        return parseInt(value.toString())\n    }\n}","import Web3Utils from \"./Web3Utils\";\n\nexport default class Lina {\n\n    static async call(method: any, data: object = {}) {\n        return method.call({from: Lina.account(), ...data})\n    }\n\n    static async send(method: any, data: object = {}) {\n        return method.send({from: Lina.account(), ...data})\n    }\n\n    static account() {\n        return Web3Utils.getDefaultAccount()\n    }\n}","import NumberUtils from \"../utils/NumberUtils\";\nimport {PlayerStats} from \"./data/PlayerStats\";\nimport {GameStats} from \"./data/GameStats\";\nimport {OpponentStat} from \"./data/OpponentStat\";\nimport Lina from \"../blockchain/Lina\";\nimport Web3Utils from \"../blockchain/Web3Utils\";\n\n\nexport default class Game {\n\n    static async getGameEntranceTicketFee(contract: any): Promise<number> {\n        return await Lina.call(contract.methods.entranceTicketFee())\n    }\n\n    static async joinColiseum(contract: any) {\n        const entranceTicket = await this.getGameEntranceTicketFee(contract)\n        await Lina.send(contract.methods.joinGame(), {value: entranceTicket})\n    }\n\n    static async joinMatchQueue(contract: any) {\n        await Lina.send(contract.methods.joinMatch())\n    }\n\n    static async getGameStats(contract: any): Promise<GameStats> {\n        const alivePlayers = await Lina.call(contract.methods.alivePlayers())\n        const totalPaa = await Lina.call(contract.methods.totalPaa())\n        const totalChi = await Lina.call(contract.methods.totalChi())\n        const totalGuu = await Lina.call(contract.methods.totalGuu())\n        return {\n            alivePlayers: NumberUtils.from(alivePlayers),\n            totalPaa: NumberUtils.from(totalPaa),\n            totalChi: NumberUtils.from(totalChi),\n            totalGuu: NumberUtils.from(totalGuu)\n        }\n    }\n\n    static async getMyProfile(contract: any): Promise<PlayerStats | null> {\n        const profile = await Lina.call(contract.methods.getProfile())\n        const queued = await Lina.call(contract.methods.queued())\n        if (profile) {\n            return {\n                inQueue: queued === Web3Utils.getDefaultAccount(),\n                inMatch: profile.inMatch === 1,\n                nen: NumberUtils.from(profile.nen),\n                guu: NumberUtils.from(profile.guu),\n                paa: NumberUtils.from(profile.paa),\n                chi: NumberUtils.from(profile.chi)\n            }\n        } else return null\n    }\n\n    static async getOpponent(contract: any, playerAddress: any): Promise<OpponentStat | null> {\n        const player = await Lina.call(contract.methods.getPlayer({_player: playerAddress}))\n        if (player) {\n            return {\n                nen: NumberUtils.from(player.nen),\n                techniques: NumberUtils.from(player.techniques),\n            }\n        } else return null\n    }\n}","import guu from \"./techniques/guu.png\"\nimport chi from \"./techniques/chi.png\"\nimport paa from \"./techniques/paa.png\"\nimport hidden from \"./techniques/hidden.png\"\n\nexport const TechniqueImg = {\n    guu: guu,\n    chi: chi,\n    paa: paa,\n    hidden: hidden\n}","export default __webpack_public_path__ + \"static/media/guu.b4d646ff.png\";","export default __webpack_public_path__ + \"static/media/chi.9d6708ec.png\";","export default __webpack_public_path__ + \"static/media/paa.063b3a7d.png\";","export default __webpack_public_path__ + \"static/media/hidden.ee575a9e.png\";","import React, {Component} from \"react\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\nimport ContractLoader from \"../../../blockchain/ContractLoader\";\nimport Web3Utils from \"../../../blockchain/Web3Utils\";\nimport Game from \"../../../game/Game\";\nimport ColiseumMatch from \"./ColiseumMatch\";\nimport {CurrentMatch} from \"../../../game/data/CurrentMatch\";\nimport {PlayerStats} from \"../../../game/data/PlayerStats\";\nimport {GameStats} from \"../../../game/data/GameStats\";\nimport Lina from \"../../../blockchain/Lina\";\n\nenum GameState {\n    Loading,\n    NeedPay,\n    Lobby,\n    LookingMatch,\n    InMatch\n}\n\ninterface JaJankenColiseumProperties extends RouteComponentProps {\n    account: string,\n}\n\ninterface JaJankenColiseumState {\n    jajankenColiseum: any,\n    player: PlayerStats,\n    game: GameStats,\n    gameState: GameState,\n    currentMatch: CurrentMatch | null\n}\n\nclass JaJankenColiseum extends Component<JaJankenColiseumProperties, JaJankenColiseumState> {\n\n    constructor(props: JaJankenColiseumProperties) {\n        super(props)\n        this.state = {\n            jajankenColiseum: {},\n            player: {\n                inQueue: false,\n                inMatch: false,\n                nen: 0,\n                guu: 0,\n                paa: 0,\n                chi: 0\n            },\n            game: {\n                alivePlayers: 0,\n                totalGuu: 0,\n                totalPaa: 0,\n                totalChi: 0\n            },\n            gameState: GameState.Loading,\n            currentMatch: null\n        }\n    }\n\n    async componentDidMount() {\n        await this.loadColiseumData()\n        await this.subscribeToGameEvents()\n    }\n\n    async loadColiseumData() {\n        const coliseum = await ContractLoader.instantiateColiseum()\n\n        Web3Utils.setDefaultAccount(this.props.account)\n\n        this.setState({jajankenColiseum: coliseum})\n\n        Game.getGameStats(this.state.jajankenColiseum).then(game => {\n                console.log(\"[init] game\", game)\n                this.setState({\n                    game: game\n                })\n            }\n        )\n\n        Game.getMyProfile(coliseum).then(profile => {\n            console.log(\"[init] profile\", profile)\n            if (profile) {\n                if (profile.nen === 0) {\n                    window.alert(`Account ${Lina.account()} has previously lost all his nen, please re-join the game first!`)\n                    this.setState({gameState: GameState.NeedPay})\n                } else if (profile.inMatch) {\n                    this.setState({player: profile, gameState: GameState.InMatch})\n                } else if (profile.inQueue) {\n                    this.setState({player: profile, gameState: GameState.LookingMatch})\n                } else {\n                    this.setState({player: profile, gameState: GameState.Lobby})\n                }\n            } else {\n                window.alert(`Account ${Lina.account()} do not exist yet, please join the game first!`)\n                this.setState({gameState: GameState.NeedPay})\n            }\n        })\n    }\n\n    handleStartMatch = (event: any) => {\n        const data = event.returnValues\n        this.setState({\n            gameState: GameState.InMatch,\n            currentMatch: {p1: data.p1, p2: data.p2, matchId: data.matchId}\n        })\n    }\n\n    handlePlayerJoinGame = (event: any) => {\n        const data = event.returnValues\n        if (data.p === Lina.account()) {\n            Game.getMyProfile(this.state.jajankenColiseum).then(profile => {\n                    if (profile) {\n                        this.setState({player: profile})\n                    }\n                }\n            )\n            this.setState({gameState: GameState.Lobby})\n        }\n        Game.getGameStats(this.state.jajankenColiseum).then(game => {\n                this.setState({game: game})\n            }\n        )\n    }\n\n    async subscribeToGameEvents() {\n        await this.state.jajankenColiseum\n\n        this.state.jajankenColiseum.events.PlayerJoin()\n            .on('data', this.handlePlayerJoinGame)\n        this.state.jajankenColiseum.events.MatchStart({p1: Lina.account()})\n            .on('data', this.handleStartMatch)\n        this.state.jajankenColiseum.events.MatchStart({p2: Lina.account()})\n            .on('data', this.handleStartMatch)\n    }\n\n    joinColiseum = async () => {\n        await Game.joinColiseum(this.state.jajankenColiseum)\n    }\n\n    joinMatch = async () => {\n        await Game.joinMatchQueue(this.state.jajankenColiseum).then(data =>\n            this.setState({gameState: GameState.LookingMatch})\n        ).catch(error => console.log(\"failed join Match:\", error))\n    }\n\n    backToLobby = () => {\n        this.setState({gameState: GameState.Lobby})\n    }\n\n    render() {\n        if (this.state.gameState === GameState.Loading) {\n            return <p id=\"loader\" className=\"text-center\">Loading...</p>\n        } else if (this.state.gameState === GameState.NeedPay) {\n            return <div>\n                Welcome to the Coliseum {Lina.account()} !\n                <div className=\"row\">\n                    <button className={\"btn-light\"} onClick={this.joinColiseum}>Join Coliseum</button>\n                </div>\n            </div>\n        } else if (this.state.gameState === GameState.Lobby) {\n            return <div>\n                Welcome to the Coliseum ! You got {this.state.player.nen} nen\n                <div className=\"row\">\n                    <button className={\"btn-light\"} onClick={this.joinMatch}>Join Match!</button>\n                </div>\n            </div>\n        } else if (this.state.gameState === GameState.LookingMatch) {\n            return <div>\n                Looking for an opponent\n            </div>\n        } else if (this.state.gameState === GameState.InMatch) {\n            if (this.state.currentMatch != null) {\n                return <div>\n                    <ColiseumMatch account={Lina.account()} jajankenColiseum={this.state.jajankenColiseum} backToLobby={this.backToLobby}\n                                   currentMatch={this.state.currentMatch}/>\n                </div>\n            } else {\n                <div className=\"row\">\n                    <button className={\"btn-light\"} onClick={this.backToLobby}>Back to Lobby!</button>\n                </div>\n            }\n        } else {\n            return <div>How did you get there?</div>\n        }\n    }\n}\n\nexport default withRouter(JaJankenColiseum);","import './App.scss';\nimport HomeView from \"./web/views/HomeView\";\nimport React, {Component} from 'react';\nimport Web3Utils from \"./blockchain/Web3Utils\";\nimport Navbar from \"./web/views/Navbar\";\n\nimport {library} from '@fortawesome/fontawesome-svg-core'\nimport {faGithub, faLinkedinIn} from '@fortawesome/free-brands-svg-icons';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport JaJankenColiseum from \"./web/views/coliseum/JaJankenColiseum\";\n\nlibrary.add(faGithub, faLinkedinIn);\n\n\ninterface AppProperties {\n}\n\ninterface AppState {\n    account: string,\n    loading: boolean\n}\n\nexport default class App extends Component<AppProperties, AppState> {\n    constructor(props: AppProperties) {\n        super(props)\n        this.state = {\n            account: '0x0',\n            loading: true\n        }\n    }\n\n    async componentDidMount() {\n        await Web3Utils.loadMetamask()\n        await this.loadBlockchainData()\n    }\n\n    async loadBlockchainData() {\n        const accounts = await Web3Utils.getAccounts()\n        console.log(\"accounts: \", accounts)\n        this.setState({account: accounts[0], loading: false})\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n        } else {\n            return <div className=\"App\">\n                <Navbar account={this.state.account}/>\n                <div className=\"container-fluid mt-5\">\n                    <div className=\"row\">\n                        <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{maxWidth: '100%'}}>\n                            <BrowserRouter>\n                                <Switch>\n                                    <Route path={\"/coliseum\"}>\n                                        <JaJankenColiseum account={this.state.account}/>\n                                    </Route>\n                                    <Route path={\"/\"}>\n                                        <HomeView/>\n                                    </Route>\n                                </Switch>\n                            </BrowserRouter>\n                        </main>\n                    </div>\n                </div>\n            </div>\n        }\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}